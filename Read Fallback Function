# File: fetch_from_blob/__init__.py
import logging
import azure.functions as func
from azure.storage.blob import BlobServiceClient
import os
import json

BLOB_CONN_STR = os.environ["BLOB_CONN_STR"]
BLOB_CONTAINER = os.environ["BLOB_CONTAINER"]

def main(req: func.HttpRequest) -> func.HttpResponse:
    record_id = req.params.get('recordId')
    customer_id = req.params.get('customerId')
    billing_date = req.params.get('billingDate')  # Expected YYYY-MM-DD

    if not (record_id and customer_id and billing_date):
        return func.HttpResponse("Missing query parameters", status_code=400)

    try:
        blob_path = f"{billing_date}/{customer_id}/{record_id}.json"
        blob_client = BlobServiceClient.from_connection_string(BLOB_CONN_STR)
        container = blob_client.get_container_client(BLOB_CONTAINER)

        blob = container.get_blob_client(blob_path)
        stream = blob.download_blob().readall()
        data = json.loads(stream)

        return func.HttpResponse(json.dumps(data), status_code=200, mimetype="application/json")

    except Exception as e:
        logging.error(f"Error fetching from blob: {e}")
        return func.HttpResponse("Record not found in archive", status_code=404)
